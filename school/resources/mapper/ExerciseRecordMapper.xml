<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.school.mapper.ExerciseRecordMapper">
  <resultMap id="BaseResultMap" type="com.project.school.pojo.ExerciseRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="question_id_list" jdbcType="VARCHAR" property="questionIdList" />
    <result column="right_num" jdbcType="INTEGER" property="rightNum" />
    <result column="user_answer_list" jdbcType="VARCHAR" property="userAnswerList" />
    <result column="right_or_wrong" jdbcType="VARCHAR" property="rightOrWrong" />
    <result column="score" jdbcType="INTEGER" property="score" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="finish_time" jdbcType="TIMESTAMP" property="finishTime" />
    <result column="area_id" jdbcType="INTEGER" property="areaId" />
    <result column="finish_flag" jdbcType="INTEGER" property="finishFlag" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, username, num, question_id_list, right_num, user_answer_list, right_or_wrong, 
    score, create_time, finish_time, area_id, finish_flag, type_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from exercise_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from exercise_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.project.school.pojo.ExerciseRecord">
    insert into exercise_record (id, username, num, 
      question_id_list, right_num, user_answer_list, 
      right_or_wrong, score, create_time, 
      finish_time, area_id, finish_flag, 
      type_id)
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, 
      #{questionIdList,jdbcType=VARCHAR}, #{rightNum,jdbcType=INTEGER}, #{userAnswerList,jdbcType=VARCHAR}, 
      #{rightOrWrong,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{finishTime,jdbcType=TIMESTAMP}, #{areaId,jdbcType=INTEGER}, #{finishFlag,jdbcType=INTEGER}, 
      #{typeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.project.school.pojo.ExerciseRecord">
    insert into exercise_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="questionIdList != null">
        question_id_list,
      </if>
      <if test="rightNum != null">
        right_num,
      </if>
      <if test="userAnswerList != null">
        user_answer_list,
      </if>
      <if test="rightOrWrong != null">
        right_or_wrong,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="finishTime != null">
        finish_time,
      </if>
      <if test="areaId != null">
        area_id,
      </if>
      <if test="finishFlag != null">
        finish_flag,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="questionIdList != null">
        #{questionIdList,jdbcType=VARCHAR},
      </if>
      <if test="rightNum != null">
        #{rightNum,jdbcType=INTEGER},
      </if>
      <if test="userAnswerList != null">
        #{userAnswerList,jdbcType=VARCHAR},
      </if>
      <if test="rightOrWrong != null">
        #{rightOrWrong,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        #{areaId,jdbcType=INTEGER},
      </if>
      <if test="finishFlag != null">
        #{finishFlag,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.project.school.pojo.ExerciseRecord">
    update exercise_record
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="questionIdList != null">
        question_id_list = #{questionIdList,jdbcType=VARCHAR},
      </if>
      <if test="rightNum != null">
        right_num = #{rightNum,jdbcType=INTEGER},
      </if>
      <if test="userAnswerList != null">
        user_answer_list = #{userAnswerList,jdbcType=VARCHAR},
      </if>
      <if test="rightOrWrong != null">
        right_or_wrong = #{rightOrWrong,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="finishTime != null">
        finish_time = #{finishTime,jdbcType=TIMESTAMP},
      </if>
      <if test="areaId != null">
        area_id = #{areaId,jdbcType=INTEGER},
      </if>
      <if test="finishFlag != null">
        finish_flag = #{finishFlag,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.project.school.pojo.ExerciseRecord">
    update exercise_record
    set username = #{username,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      question_id_list = #{questionIdList,jdbcType=VARCHAR},
      right_num = #{rightNum,jdbcType=INTEGER},
      user_answer_list = #{userAnswerList,jdbcType=VARCHAR},
      right_or_wrong = #{rightOrWrong,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      finish_time = #{finishTime,jdbcType=TIMESTAMP},
      area_id = #{areaId,jdbcType=INTEGER},
      finish_flag = #{finishFlag,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="checkCompleteOrNot" resultType="int" parameterType="string">
    select count(1) from exercise_record
    where username = #{username}
    and finish_flag = 0
    and area_id = #{areaId}
  </select>

  <select id="selectQuestionIdList" resultType="string" parameterType="string">
    select question_id_list from exercise_record
    where username = #{username}
    and finish_flag = 0
    and area_id = #{areaId}
  </select>

  <update id="updateAnswerInfo" parameterType="map">
    update exercise_record
    set right_num = #{rightNum}, user_answer_list = #{userAnswerList}, right_or_wrong = #{rightOrWrongFlag},
    score = #{score}, finish_flag = 1, finish_time = now()
    where username = #{username} and finish_flag = 0 and area_id = #{areaId}
  </update>
  <select id="selectExcHistory" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from exercise_record
    where username=#{username}
    order by create_time desc
  </select>

  <select id="countFinishCount" parameterType="java.lang.String" resultType="int">
  select count(1) from exercise_record
  where username=#{username} and finish_flag=1
</select>





</mapper>